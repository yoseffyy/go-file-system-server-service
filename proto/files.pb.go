// Code generated by protoc-gen-go. DO NOT EDIT.
// source: files.proto

package files

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CreateReq struct {
	File                 *File    `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateReq) Reset()         { *m = CreateReq{} }
func (m *CreateReq) String() string { return proto.CompactTextString(m) }
func (*CreateReq) ProtoMessage()    {}
func (*CreateReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_cac8f32ecfdd343c, []int{0}
}

func (m *CreateReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateReq.Unmarshal(m, b)
}
func (m *CreateReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateReq.Marshal(b, m, deterministic)
}
func (m *CreateReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateReq.Merge(m, src)
}
func (m *CreateReq) XXX_Size() int {
	return xxx_messageInfo_CreateReq.Size(m)
}
func (m *CreateReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateReq proto.InternalMessageInfo

func (m *CreateReq) GetFile() *File {
	if m != nil {
		return m.File
	}
	return nil
}

type ReadReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Owner                string   `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadReq) Reset()         { *m = ReadReq{} }
func (m *ReadReq) String() string { return proto.CompactTextString(m) }
func (*ReadReq) ProtoMessage()    {}
func (*ReadReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_cac8f32ecfdd343c, []int{1}
}

func (m *ReadReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadReq.Unmarshal(m, b)
}
func (m *ReadReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadReq.Marshal(b, m, deterministic)
}
func (m *ReadReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadReq.Merge(m, src)
}
func (m *ReadReq) XXX_Size() int {
	return xxx_messageInfo_ReadReq.Size(m)
}
func (m *ReadReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadReq.DiscardUnknown(m)
}

var xxx_messageInfo_ReadReq proto.InternalMessageInfo

func (m *ReadReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ReadReq) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

type UpdateReq struct {
	File                 *File    `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateReq) Reset()         { *m = UpdateReq{} }
func (m *UpdateReq) String() string { return proto.CompactTextString(m) }
func (*UpdateReq) ProtoMessage()    {}
func (*UpdateReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_cac8f32ecfdd343c, []int{2}
}

func (m *UpdateReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateReq.Unmarshal(m, b)
}
func (m *UpdateReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateReq.Marshal(b, m, deterministic)
}
func (m *UpdateReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateReq.Merge(m, src)
}
func (m *UpdateReq) XXX_Size() int {
	return xxx_messageInfo_UpdateReq.Size(m)
}
func (m *UpdateReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateReq proto.InternalMessageInfo

func (m *UpdateReq) GetFile() *File {
	if m != nil {
		return m.File
	}
	return nil
}

type DeleteReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Owner                string   `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteReq) Reset()         { *m = DeleteReq{} }
func (m *DeleteReq) String() string { return proto.CompactTextString(m) }
func (*DeleteReq) ProtoMessage()    {}
func (*DeleteReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_cac8f32ecfdd343c, []int{3}
}

func (m *DeleteReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteReq.Unmarshal(m, b)
}
func (m *DeleteReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteReq.Marshal(b, m, deterministic)
}
func (m *DeleteReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteReq.Merge(m, src)
}
func (m *DeleteReq) XXX_Size() int {
	return xxx_messageInfo_DeleteReq.Size(m)
}
func (m *DeleteReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteReq proto.InternalMessageInfo

func (m *DeleteReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DeleteReq) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

type FileRes struct {
	File                 *File    `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileRes) Reset()         { *m = FileRes{} }
func (m *FileRes) String() string { return proto.CompactTextString(m) }
func (*FileRes) ProtoMessage()    {}
func (*FileRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_cac8f32ecfdd343c, []int{4}
}

func (m *FileRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileRes.Unmarshal(m, b)
}
func (m *FileRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileRes.Marshal(b, m, deterministic)
}
func (m *FileRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileRes.Merge(m, src)
}
func (m *FileRes) XXX_Size() int {
	return xxx_messageInfo_FileRes.Size(m)
}
func (m *FileRes) XXX_DiscardUnknown() {
	xxx_messageInfo_FileRes.DiscardUnknown(m)
}

var xxx_messageInfo_FileRes proto.InternalMessageInfo

func (m *FileRes) GetFile() *File {
	if m != nil {
		return m.File
	}
	return nil
}

type DeleteRes struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRes) Reset()         { *m = DeleteRes{} }
func (m *DeleteRes) String() string { return proto.CompactTextString(m) }
func (*DeleteRes) ProtoMessage()    {}
func (*DeleteRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_cac8f32ecfdd343c, []int{5}
}

func (m *DeleteRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRes.Unmarshal(m, b)
}
func (m *DeleteRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRes.Marshal(b, m, deterministic)
}
func (m *DeleteRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRes.Merge(m, src)
}
func (m *DeleteRes) XXX_Size() int {
	return xxx_messageInfo_DeleteRes.Size(m)
}
func (m *DeleteRes) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRes.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRes proto.InternalMessageInfo

func (m *DeleteRes) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type ListFilesReq struct {
	Owner                string   `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListFilesReq) Reset()         { *m = ListFilesReq{} }
func (m *ListFilesReq) String() string { return proto.CompactTextString(m) }
func (*ListFilesReq) ProtoMessage()    {}
func (*ListFilesReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_cac8f32ecfdd343c, []int{6}
}

func (m *ListFilesReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListFilesReq.Unmarshal(m, b)
}
func (m *ListFilesReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListFilesReq.Marshal(b, m, deterministic)
}
func (m *ListFilesReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListFilesReq.Merge(m, src)
}
func (m *ListFilesReq) XXX_Size() int {
	return xxx_messageInfo_ListFilesReq.Size(m)
}
func (m *ListFilesReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListFilesReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListFilesReq proto.InternalMessageInfo

func (m *ListFilesReq) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

type ListFilesRes struct {
	Files                []*File  `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListFilesRes) Reset()         { *m = ListFilesRes{} }
func (m *ListFilesRes) String() string { return proto.CompactTextString(m) }
func (*ListFilesRes) ProtoMessage()    {}
func (*ListFilesRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_cac8f32ecfdd343c, []int{7}
}

func (m *ListFilesRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListFilesRes.Unmarshal(m, b)
}
func (m *ListFilesRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListFilesRes.Marshal(b, m, deterministic)
}
func (m *ListFilesRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListFilesRes.Merge(m, src)
}
func (m *ListFilesRes) XXX_Size() int {
	return xxx_messageInfo_ListFilesRes.Size(m)
}
func (m *ListFilesRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ListFilesRes.DiscardUnknown(m)
}

var xxx_messageInfo_ListFilesRes proto.InternalMessageInfo

func (m *ListFilesRes) GetFiles() []*File {
	if m != nil {
		return m.Files
	}
	return nil
}

type File struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Owner                string   `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	Path                 string   `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	Name                 string   `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	IsFolder             bool     `protobuf:"varint,5,opt,name=isFolder,proto3" json:"isFolder,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *File) Reset()         { *m = File{} }
func (m *File) String() string { return proto.CompactTextString(m) }
func (*File) ProtoMessage()    {}
func (*File) Descriptor() ([]byte, []int) {
	return fileDescriptor_cac8f32ecfdd343c, []int{8}
}

func (m *File) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_File.Unmarshal(m, b)
}
func (m *File) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_File.Marshal(b, m, deterministic)
}
func (m *File) XXX_Merge(src proto.Message) {
	xxx_messageInfo_File.Merge(m, src)
}
func (m *File) XXX_Size() int {
	return xxx_messageInfo_File.Size(m)
}
func (m *File) XXX_DiscardUnknown() {
	xxx_messageInfo_File.DiscardUnknown(m)
}

var xxx_messageInfo_File proto.InternalMessageInfo

func (m *File) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *File) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *File) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *File) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *File) GetIsFolder() bool {
	if m != nil {
		return m.IsFolder
	}
	return false
}

func init() {
	proto.RegisterType((*CreateReq)(nil), "files.CreateReq")
	proto.RegisterType((*ReadReq)(nil), "files.ReadReq")
	proto.RegisterType((*UpdateReq)(nil), "files.UpdateReq")
	proto.RegisterType((*DeleteReq)(nil), "files.DeleteReq")
	proto.RegisterType((*FileRes)(nil), "files.FileRes")
	proto.RegisterType((*DeleteRes)(nil), "files.DeleteRes")
	proto.RegisterType((*ListFilesReq)(nil), "files.ListFilesReq")
	proto.RegisterType((*ListFilesRes)(nil), "files.ListFilesRes")
	proto.RegisterType((*File)(nil), "files.File")
}

func init() {
	proto.RegisterFile("files.proto", fileDescriptor_cac8f32ecfdd343c)
}

var fileDescriptor_cac8f32ecfdd343c = []byte{
	// 324 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0xd1, 0x4e, 0x83, 0x40,
	0x10, 0x0c, 0x2d, 0xa5, 0x65, 0x31, 0x8d, 0x59, 0x7d, 0xb8, 0xf0, 0x62, 0x25, 0x6a, 0x0c, 0x69,
	0x6a, 0x5a, 0xe3, 0x17, 0x68, 0xfa, 0xe4, 0x13, 0xc6, 0x0f, 0x40, 0x58, 0xe3, 0x25, 0x58, 0x90,
	0x45, 0xfd, 0x6f, 0xbf, 0xc0, 0xdc, 0x1d, 0x3d, 0xb1, 0x35, 0x91, 0x37, 0x66, 0x6e, 0x6e, 0x66,
	0x6f, 0x07, 0x08, 0x9e, 0x65, 0x41, 0xbc, 0xa8, 0xea, 0xb2, 0x29, 0x71, 0xa4, 0x41, 0x34, 0x07,
	0xff, 0xb6, 0xa6, 0xb4, 0xa1, 0x84, 0xde, 0xf0, 0x04, 0x5c, 0xc5, 0x0a, 0x67, 0xe6, 0x5c, 0x06,
	0xab, 0x60, 0x61, 0xf4, 0x6b, 0x59, 0x50, 0xa2, 0x0f, 0xa2, 0x2b, 0x18, 0x27, 0x94, 0xe6, 0x4a,
	0x3b, 0x85, 0x81, 0xcc, 0xb5, 0xd2, 0x4f, 0x06, 0x32, 0xc7, 0x63, 0x18, 0x95, 0x9f, 0x1b, 0xaa,
	0xc5, 0x40, 0x53, 0x06, 0x28, 0xfb, 0xc7, 0x2a, 0xef, 0x6b, 0xbf, 0x04, 0xff, 0x8e, 0x0a, 0x32,
	0xea, 0x7e, 0x01, 0x31, 0x8c, 0xb5, 0x01, 0xf1, 0xff, 0xf6, 0xe7, 0x3f, 0xf6, 0x8c, 0x02, 0xc6,
	0xfc, 0x9e, 0x65, 0xc4, 0xac, 0x2f, 0x4c, 0x92, 0x2d, 0x8c, 0xce, 0xe0, 0xe0, 0x5e, 0x72, 0xa3,
	0x2e, 0xb2, 0x1a, 0xc4, 0x06, 0x3b, 0xdd, 0xe0, 0xe5, 0x2f, 0x15, 0xe3, 0x29, 0x98, 0x8d, 0x0a,
	0x67, 0x36, 0xdc, 0x8d, 0x6f, 0x77, 0x5d, 0x81, 0xab, 0x60, 0xbf, 0x97, 0x21, 0x82, 0x5b, 0xa5,
	0xcd, 0x8b, 0x18, 0x6a, 0x52, 0x7f, 0x2b, 0x6e, 0x93, 0xbe, 0x92, 0x70, 0x0d, 0xa7, 0xbe, 0x31,
	0x84, 0x89, 0xe4, 0x75, 0x59, 0xe4, 0x54, 0x8b, 0x91, 0x7e, 0x89, 0xc5, 0xab, 0x2f, 0x07, 0x02,
	0x15, 0xf9, 0x40, 0xf5, 0x87, 0xcc, 0x08, 0x63, 0xf0, 0x4c, 0xdb, 0x78, 0xd8, 0xce, 0x67, 0xcb,
	0x0f, 0xa7, 0xdd, 0x89, 0x89, 0xf1, 0x02, 0x5c, 0xd5, 0x35, 0x6e, 0xf9, 0xb6, 0xf8, 0x3d, 0x5d,
	0x0c, 0x9e, 0xa9, 0xd8, 0x7a, 0xda, 0xc6, 0xf7, 0xb4, 0x73, 0xf0, 0x4c, 0x03, 0x56, 0x6b, 0xfb,
	0x0e, 0x77, 0x19, 0xc6, 0x1b, 0xf0, 0xed, 0x8a, 0xf1, 0xa8, 0x3d, 0xee, 0x56, 0x13, 0xfe, 0x41,
	0xf2, 0x93, 0xa7, 0x7f, 0xf0, 0xeb, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0x0b, 0x84, 0x27, 0x55,
	0xef, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FileServiceClient is the client API for FileService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FileServiceClient interface {
	Create(ctx context.Context, in *CreateReq, opts ...grpc.CallOption) (*FileRes, error)
	Read(ctx context.Context, in *ReadReq, opts ...grpc.CallOption) (*FileRes, error)
	Update(ctx context.Context, in *UpdateReq, opts ...grpc.CallOption) (*FileRes, error)
	Delete(ctx context.Context, in *DeleteReq, opts ...grpc.CallOption) (*DeleteRes, error)
	ListFiles(ctx context.Context, in *ListFilesReq, opts ...grpc.CallOption) (*ListFilesRes, error)
}

type fileServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewFileServiceClient(cc grpc.ClientConnInterface) FileServiceClient {
	return &fileServiceClient{cc}
}

func (c *fileServiceClient) Create(ctx context.Context, in *CreateReq, opts ...grpc.CallOption) (*FileRes, error) {
	out := new(FileRes)
	err := c.cc.Invoke(ctx, "/files.FileService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileServiceClient) Read(ctx context.Context, in *ReadReq, opts ...grpc.CallOption) (*FileRes, error) {
	out := new(FileRes)
	err := c.cc.Invoke(ctx, "/files.FileService/Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileServiceClient) Update(ctx context.Context, in *UpdateReq, opts ...grpc.CallOption) (*FileRes, error) {
	out := new(FileRes)
	err := c.cc.Invoke(ctx, "/files.FileService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileServiceClient) Delete(ctx context.Context, in *DeleteReq, opts ...grpc.CallOption) (*DeleteRes, error) {
	out := new(DeleteRes)
	err := c.cc.Invoke(ctx, "/files.FileService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileServiceClient) ListFiles(ctx context.Context, in *ListFilesReq, opts ...grpc.CallOption) (*ListFilesRes, error) {
	out := new(ListFilesRes)
	err := c.cc.Invoke(ctx, "/files.FileService/ListFiles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FileServiceServer is the server API for FileService service.
type FileServiceServer interface {
	Create(context.Context, *CreateReq) (*FileRes, error)
	Read(context.Context, *ReadReq) (*FileRes, error)
	Update(context.Context, *UpdateReq) (*FileRes, error)
	Delete(context.Context, *DeleteReq) (*DeleteRes, error)
	ListFiles(context.Context, *ListFilesReq) (*ListFilesRes, error)
}

// UnimplementedFileServiceServer can be embedded to have forward compatible implementations.
type UnimplementedFileServiceServer struct {
}

func (*UnimplementedFileServiceServer) Create(ctx context.Context, req *CreateReq) (*FileRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedFileServiceServer) Read(ctx context.Context, req *ReadReq) (*FileRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Read not implemented")
}
func (*UnimplementedFileServiceServer) Update(ctx context.Context, req *UpdateReq) (*FileRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedFileServiceServer) Delete(ctx context.Context, req *DeleteReq) (*DeleteRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedFileServiceServer) ListFiles(ctx context.Context, req *ListFilesReq) (*ListFilesRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListFiles not implemented")
}

func RegisterFileServiceServer(s *grpc.Server, srv FileServiceServer) {
	s.RegisterService(&_FileService_serviceDesc, srv)
}

func _FileService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/files.FileService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileServiceServer).Create(ctx, req.(*CreateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileService_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileServiceServer).Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/files.FileService/Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileServiceServer).Read(ctx, req.(*ReadReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/files.FileService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileServiceServer).Update(ctx, req.(*UpdateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/files.FileService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileServiceServer).Delete(ctx, req.(*DeleteReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileService_ListFiles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListFilesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileServiceServer).ListFiles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/files.FileService/ListFiles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileServiceServer).ListFiles(ctx, req.(*ListFilesReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _FileService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "files.FileService",
	HandlerType: (*FileServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _FileService_Create_Handler,
		},
		{
			MethodName: "Read",
			Handler:    _FileService_Read_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _FileService_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _FileService_Delete_Handler,
		},
		{
			MethodName: "ListFiles",
			Handler:    _FileService_ListFiles_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "files.proto",
}
